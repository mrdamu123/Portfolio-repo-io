[
  {
    "id": 1,
    "name": "Macy's UOP",
    "summary": "Macy's Application with Kronos Clocking handling",
    "description": "I worked as a backend support developer to the entire Macy’s Work Flow Management through Console Application triggered through Task Scheduler on hourly basis connecting to Kronos server pulling up their data. Deal with punch in/clock in issues of the user and analyzing the situation, providing the resolution to the user and making necessary code changes and removing the bugs to avoid future case scenario.",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net App",
      "ASP.Net",
	  "Windows Task Scheduler"
    ]
  },
  {
    "id": 2,
    "name": "Macy's Standard",
    "summary": "Integrated Macy's Application with Unified Paltform",
    "description": "My role as a .Net Developer is to work with Finance team on extracting clocking of employees from third party application (Kronos) in Macy’s system through the .Net application and process the data for their work wages on Audit and Pay check of the employees of entire Macy’s organization. My part as a .Net developeris to fix one particular issue which deals with few Rehire colleagues pay checks as they are not added intoKronos System which still shows them as terminated. I had to make code fix in order to process into Kronos System so that they get paid.",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net Core",
      "SQL Server",
	  "Kronos Clocking System"
    ]
  },
  {
    "id": 3,
    "name": "EMIZA",
    "summary": "Order Management and Tracking Paltform for Retail Sector",
    "description": "Worked as Lead DOTNET Back End Developer for the Retail Sector Client, providing new feature development for our product. Built multiple API Connectors for extracting data from third party applications (Easy-Ecom and Uniware applications) which store the day to day data on Orders Processing,Inventory for multiple customers. Dynamic data tracing based on next runs new information and updating the existing system.",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net Core 3.1",
      "c#",
	  "SQL Server",
	  "API Servies"
    ]
  },
  {
    "id": 4,
    "name": "Aerobiotix",
    "summary": "Realtime Machine Data handling on daily basis through Reporting Plot",
    "description": "Implemented unique sync Connector level process for Excel, CSV and DB files(SQLite DB) for reading Machine Data through ETLprocess from multiple source locations like Google Drive, One Drive files, manual Zip files and SQLite DB files based on the filemodified date for various hospital sites and process the information based on Rooms and design the warning system on the Air Quality.",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net Core 3.1",
	  "Google API Service",
	  "One Drive API Service",
	  "SQLite Connector"
    ]
  },
  {
    "id": 5,
    "name": "LLUMC Compass System",
    "summary": "Client-Server interaction on horuly basis through API Service",
    "description": "Data processing from Client Compass DB based on SID confgured into Server side SQL server for easy reporting on hourly basis through API Service with proper validation of data in the staging area based on existing data into final data storage location with Client side schedule from Task Scheduler",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      "Angular 8",
      ".Net 6.0",
	  "Rest API",
	  "Compass DB",
	  "SQL Server",
	  "Windows Task Scheduler"
    ]
  },
  {
    "id": 6,
    "name": "MC Building Management System",
    "summary": "Server interaction on trigger basis through API Service for Compass Data",
    "description": "Server-Side Custom Trigger of Compass Data extraction from Client on Specific Data based on Start Date and End Date on configured SIDs. Enabling Server triggering on Client Machine with easy enabling of Data flow on pulling of max. of 1Crore records in a single batch from SOurce to ADS Data.",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net 6.0",
	  "SQL Server",
	  "Angular 8",
	  "Compass DB",
	  "HTTP API Service"
    ]
  },
  {
    "id": 7,
    "name": "LogicMatter Inc.",
    "summary": "Advanced verison of PMManager and Platform",
    "description": "Designed Common Package 3.0 advanced version of the product focused on migration of Angular 8 to Angular 14, which includes a single Installation package (PMManager). Designed this PM-Manager application based on License functionality (contains expiry date and domain level functionality). Implemented C# code to work completely based on domain license in the sub level which includes Prerequisites Auto Installation (Sql Server, SSRS,Grafana, DotNet Runtime, URL write, respective DB creation with necessary permissions)",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net 6.0",
      "SQL Server",
	  "SSRS API Service",
	  "Grafana API Service",
	  "Angular 14"
    ]
  }
  ,
  {
    "id": 8,
    "name": "NDS Niagara Tridium Data",
    "summary": "Data extraction from Niagara Tridium Data through Custom designed API",
    "description": "Designed Custom API extractor for pulling Data from Niagara Tridium System from Cloud storage based on based Validation and Cloud ID sequence of particular SIDs to ODS staging area with HTTP Protocol having a max. batch 50,000 records(max.limit of Client) into the system within 11 seconds.",
    "projectLink": "",
    "pictures": [
      ""
    ],
    "tags": [
      ".Net 6.0",
      "SQL Server",
	  "Niagara System",
	  "HTTP API Service",
	  "Angular 8"
    ]
  }
]